digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	1 [color="#f25502", fontcolor="#ffffff", fontsize="10.00", label="LabBench::run_standard_experiment()\n91.38%\n(0.00%)"];
	1 -> 5 [arrowsize="0.69", color="#0ab318", fontcolor="#0ab318", fontsize="10.00", label="47.92%\n1×", labeldistance="1.92", penwidth="1.92"];
	1 -> 6 [arrowsize="0.66", color="#0aad35", fontcolor="#0aad35", fontsize="10.00", label="43.46%\n2×", labeldistance="1.74", penwidth="1.74"];
	2 [color="#49c208", fontcolor="#ffffff", fontsize="10.00", label="NeighborGrid<Particle, 2>::recurse_into_neighbor_grid(std::array<int, 2ul>, std::array<int, 2ul>, int, std::vector<Particle*, std::allocator<Particle*> >&, Particle*)\n58.72%\n(34.73%)\n473954580×"];
	2 -> 9 [arrowsize="0.37", color="#0d4d84", fontcolor="#0d4d84", fontsize="10.00", label="13.54%\n781544522×", labeldistance="0.54", penwidth="0.54"];
	2 -> 14 [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.68%\n781544522×", labeldistance="0.50", penwidth="0.50"];
	2 -> 17 [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.07%\n781544522×", labeldistance="0.50", penwidth="0.50"];
	2 -> 18 [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.69%\n2563860224×", labeldistance="0.50", penwidth="0.50"];
	2 -> 25 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.01%\n198458617×", labeldistance="0.50", penwidth="0.50"];
	3 [color="#0bb60a", fontcolor="#ffffff", fontsize="10.00", label="System::get_force(Particle&)\n50.17%\n(0.13%)\n50930000×"];
	3 -> 4 [arrowsize="0.71", color="#0ab60a", fontcolor="#0ab60a", fontsize="10.00", label="50.03%\n50930000×", labeldistance="2.00", penwidth="2.00"];
	4 [color="#0ab60a", fontcolor="#ffffff", fontsize="10.00", label="System::get_force_cell_list(Particle&)\n50.03%\n(5.71%)\n50930000×"];
	4 -> 2 [arrowsize="0.56", color="#0b9c76", fontcolor="#0b9c76", fontsize="10.00", label="31.55%\n254650000×", labeldistance="1.26", penwidth="1.26"];
	4 -> 10 [arrowsize="0.35", color="#0d337e", fontcolor="#0d337e", fontsize="10.00", label="8.57%\n567863992×", labeldistance="0.50", penwidth="0.50"];
	4 -> 11 [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.22%\n277457016×", labeldistance="0.50", penwidth="0.50"];
	4 -> 23 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.48%\n50930000×", labeldistance="0.50", penwidth="0.50"];
	4 -> 27 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.82%\n363877580×", labeldistance="0.50", penwidth="0.50"];
	4 -> 30 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.63%\n86420564×", labeldistance="0.50", penwidth="0.50"];
	5 [color="#0ab318", fontcolor="#ffffff", fontsize="10.00", label="System::minimize_energy(double)\n47.92%\n(0.32%)\n1×"];
	5 -> 3 [arrowsize="0.45", color="#0c738d", fontcolor="#0c738d", fontsize="10.00", label="20.07%\n20372000×", labeldistance="0.80", penwidth="0.80"];
	5 -> 8 [arrowsize="0.52", color="#0c978a", fontcolor="#0c978a", fontsize="10.00", label="27.32%\n2003×", labeldistance="1.09", penwidth="1.09"];
	5 -> 32 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.21%\n1000×", labeldistance="0.50", penwidth="0.50"];
	6 [color="#0aad35", fontcolor="#ffffff", fontsize="10.00", label="LabBench::run(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int)\n43.46%\n(0.00%)\n2×"];
	6 -> 7 [arrowsize="0.64", color="#0ba943", fontcolor="#0ba943", fontsize="10.00", label="41.16%\n1500×", labeldistance="1.65", penwidth="1.65"];
	6 -> 20 [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.30%\n150×", labeldistance="0.50", penwidth="0.50"];
	7 [color="#0ba943", fontcolor="#ffffff", fontsize="10.00", label="ActiveSolver::update(System&)\n41.16%\n(2.16%)\n1500×"];
	7 -> 3 [arrowsize="0.55", color="#0c9a7d", fontcolor="#0c9a7d", fontsize="10.00", label="30.10%\n30558000×", labeldistance="1.20", penwidth="1.20"];
	7 -> 12 [arrowsize="0.35", color="#0d287b", fontcolor="#0d287b", fontsize="10.00", label="6.29%\n1500×", labeldistance="0.50", penwidth="0.50"];
	7 -> 22 [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.16%\n1500×", labeldistance="0.50", penwidth="0.50"];
	7 -> 32 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.31%\n1500×", labeldistance="0.50", penwidth="0.50"];
	8 [color="#0c9981", fontcolor="#ffffff", fontsize="10.00", label="System::get_energy_cell_list()\n29.37%\n(0.81%)\n2153×"];
	8 -> 2 [arrowsize="0.52", color="#0c968a", fontcolor="#0c968a", fontsize="10.00", label="27.17%\n219304580×", labeldistance="1.09", penwidth="1.09"];
	8 -> 10 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.85%\n56449164×", labeldistance="0.50", penwidth="0.50"];
	8 -> 23 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.41%\n43860916×", labeldistance="0.50", penwidth="0.50"];
	9 [color="#0d4d84", fontcolor="#ffffff", fontsize="10.00", label="void std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_assign<std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_assign(std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&)::{lambda(std::__detail::_Hash_node<Particle*, false> const*)#1}>(std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_assign(std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&)::{lambda(std::__detail::_Hash_node<Particle*, false> const*)#1} const&)\n13.54%\n(12.61%)\n781544522×"];
	9 -> 26 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.93%\n781544522×", labeldistance="0.50", penwidth="0.50"];
	10 [color="#0d4883", fontcolor="#ffffff", fontsize="10.00", label="System::get_dist(Particle&, Particle&)\n12.56%\n(5.92%)\n831812162×"];
	10 -> 11 [arrowsize="0.35", color="#0d2a7b", fontcolor="#0d2a7b", fontsize="10.00", label="6.64%\n831812162×", labeldistance="0.50", penwidth="0.50"];
	11 [color="#0d357e", fontcolor="#ffffff", fontsize="10.00", label="System::get_disp_vec(Particle&, Particle&)\n8.86%\n(8.86%)\n1109269178×"];
	12 [color="#0d287b", fontcolor="#ffffff", fontsize="10.00", label="System::update_neighborgrid()\n6.29%\n(0.01%)\n1500×"];
	12 -> 13 [arrowsize="0.35", color="#0d287b", fontcolor="#0d287b", fontsize="10.00", label="6.28%\n30558000×", labeldistance="0.50", penwidth="0.50"];
	13 [color="#0d287b", fontcolor="#ffffff", fontsize="10.00", label="NeighborGrid<Particle, 2>::update_atom(Particle*)\n6.28%\n(3.23%)\n30558000×"];
	13 -> 14 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.29%\n61103134×", labeldistance="0.50", penwidth="0.50"];
	13 -> 23 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.22%\n130377509×", labeldistance="0.50", penwidth="0.50"];
	13 -> 28 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.86%\n69261509×", labeldistance="0.50", penwidth="0.50"];
	13 -> 31 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.54%\n30558000×", labeldistance="0.50", penwidth="0.50"];
	14 [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="std::__detail::_Map_base<long, std::pair<long const, std::unordered_set<Particle*, std::hash<Particle*>, std::equal_to<Particle*>, std::allocator<Particle*> > >, std::allocator<std::pair<long const, std::unordered_set<Particle*, std::hash<Particle*>, std::equal_to<Particle*>, std::allocator<Particle*> > > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long&&)\n3.97%\n(3.80%)\n842647656×"];
	15 [color="#0d1b77", fontcolor="#ffffff", fontsize="10.00", label="System::System(ParamDict&, gsl_rng*&)\n3.36%\n(0.12%)\n1×"];
	15 -> 10 [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.13%\n207499006×", labeldistance="0.50", penwidth="0.50"];
	16 [color="#0d1b77", fontcolor="#ffffff", fontsize="10.00", label="LabBench::LabBench(ParamDict&, gsl_rng*&)\n3.36%\n(0.00%)"];
	16 -> 15 [arrowsize="0.35", color="#0d1b77", fontcolor="#0d1b77", fontsize="10.00", label="3.36%\n1×", labeldistance="0.50", penwidth="0.50"];
	17 [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()\n3.13%\n(0.92%)\n797872726×"];
	17 -> 21 [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.21%\n797872726×", labeldistance="0.50", penwidth="0.50"];
	18 [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="Particle::get_position()\n2.85%\n(2.85%)\n2719767140×"];
	19 [color="#0d1776", fontcolor="#ffffff", fontsize="10.00", label="t2_20\n2.34%\n(2.34%)"];
	20 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="Observer::dump_h5md(System&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)\n2.30%\n(0.15%)\n150×"];
	20 -> 8 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.05%\n150×", labeldistance="0.50", penwidth="0.50"];
	21 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()\n2.21%\n(2.21%)\n797872726×"];
	22 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="ActiveSolver::get_active_noise_forces(System&, Generator&)\n2.16%\n(2.07%)\n1500×"];
	23 [color="#0d1675", fontcolor="#ffffff", fontsize="10.00", label="NeighborGrid<Particle, 2>::position_to_box_number(double*)\n2.11%\n(2.11%)\n225168425×"];
	24 [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="n1_20\n1.43%\n(1.43%)"];
	25 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="void std::vector<Particle*, std::allocator<Particle*> >::_M_realloc_insert<Particle* const&>(__gnu_cxx::__normal_iterator<Particle**, std::vector<Particle*, std::allocator<Particle*> > >, Particle* const&)\n1.01%\n(1.01%)\n198458617×"];
	26 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="operator<<(std::ostream&, Particle&)\n0.94%\n(0.94%)\n790007570×"];
	26 -> 26 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="2×", labeldistance="0.50", penwidth="0.50"];
	27 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const\n0.90%\n(0.90%)\n399985098×"];
	28 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="Particle::get_old_position()\n0.86%\n(0.86%)\n69261509×"];
	29 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="fftw_cpy2d_pair_ci\n0.84%\n(0.84%)"];
	30 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="System::get_wca_force(double, arma::Col<double>, double, double)\n0.63%\n(0.41%)\n86420564×"];
	31 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="std::_Hashtable<Particle*, Particle*, std::allocator<Particle*>, std::__detail::_Identity, std::equal_to<Particle*>, std::hash<Particle*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<Particle*, false>*)\n0.54%\n(0.53%)\n61116000×"];
	31 -> 31 [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="30558000×", labeldistance="0.50", penwidth="0.50"];
	32 [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="System::apply_pbc()\n0.51%\n(0.51%)\n2501×"];
}
